version: '3.7'
services:

  car-park-db:
    container_name: car-park-db
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: docker
    ports:
      - "5432:5432"
    volumes:
      - $HOME/car-park/db/:/var/lib/postgresql/data
    networks:
      - car-park

  car-park:
    container_name: car-park
    build:
      context: car-park
      dockerfile: Dockerfile
    environment:
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5505
      SPRING_DATASOURCE_URL: jdbc:postgresql://car-park-db:5432/postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - car-park-db
    ports:
      - "8086:8080"
      - "9096:5505"
    networks:
      - car-park

  car-park-generator:
    container_name: car-park-generator
    build:
      context: car-park-generator
      dockerfile: Dockerfile
    environment:
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5505
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - car-park
    ports:
      - "8085:8080"
      - "9095:5505"
    networks:
      - car-park

  kafka:
    image: bitnami/kafka:latest
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: -1QqrYaLRbiC9qVwlBHO9A
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    networks:
      - car-park

  grafana:
    build: './config/grafana'
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus


volumes:
  kafka_data:

networks:
  car-park: