# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package --file car-park/pom.xml

    - name: PrepareReg Names
      run: |
        echo IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        echo DOCKERHUB_IMAGE_NAME=docker.pkg.github.com/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')/$(echo ${{ github.repository #*/ }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

#     Build Docker image:
    - name: Build and tag image
      run: |
        docker build -t "${{ env.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ env.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" .

    - name: Docker login
      run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}

#     Publish image to github package repository:
    - name: Publish image
      run: docker push "docker.pkg.github.com/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}"
